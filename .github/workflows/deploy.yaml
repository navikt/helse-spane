name: Deploy app i NAIS

on:
  push:
    branches: main
    paths-ignore:
      - 'spane-opprydding/**'
      - '.github/workflows/opprydding-dev.yaml'
      - 'nais/opprydding/nais.yaml'
      - '.idea/**'
      - 'README.md'
      - 'LICENSE'
      - 'CODEOWNERS'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  set_version:
    name: helse-spane
    runs-on: ubuntu-latest
    steps:
      - name: create docker tag
        run: echo "TAG=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
    outputs:
      image: ghcr.io/${{ github.repository }}/helse-spane:${{ env.TAG }}

  build:
    permissions:
      packages: write
    name: build docker image
    runs-on: ubuntu-latest
    needs: set_version
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21.x'

      - name: Setup npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: test and build
        run: ./gradlew build

      - name: build docker image
        run: docker build . --pull -t ${{ needs.set_version.outputs.image }}

      - name: push docker image
        run: |
          docker login --username "$GITHUB_REPOSITORY" -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker push ${{ needs.set_version.outputs.image }}

  deployDev:
    name: Deploy to dev
    needs: [ set_version, build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml
          IMAGE: ${{ needs.set_version.outputs.image }}
          VARS: nais/dev.yaml

